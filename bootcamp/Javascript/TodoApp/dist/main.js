(()=>{"use strict";const e=class{constructor(e){this.element=e,this.parentDiv}renderElement(){const e=document.createElement("div");return e.id=this.element.title,this.element.hasOwnProperty("className")&&"Task"===this.element.className&&(this.parentDiv=document.getElementById("tasks"),e.innerHTML=`<div class="task-content">\n                <div class="task-content-column">\n                    <div class="task-name">${this.element.title}</div>\n                    <div class="task-description">${this.element.description}</div>\n                </div>\n                <div class="task-content-column">\n                    <div class="task-completed-by">Complete by:</div>\n                    <div class="task-end-date">${this.element.endDate}</div>\n                </div>\n            </div>\n            <div class="task-btns">\n                <i class="material-icons task-complete-btn">check</i>\n                <i class="material-icons task-edit-btn">edit</i>\n                <i class="material-icons task-remove-btn">delete</i>\n            </div>\n\n            <form class="task-input-form">\n                <div class="task-content form-content">\n                    <div class="task-content-column">\n                    <label for="title-input">Task</label>\n                        <input class="task-name-input" name="title-input" type="text" value="${this.element.title}"></input>\n                        <label for="title-input">Description</label>\n                        <textarea class="task-description-input" rows="5"> ${this.element.description}</textarea>\n                    </div>\n                    <div class="task-content-column">\n                        <div class="task-completed-by">Complete by:</div>\n                        <input class="task-end-date-input" type="date" value="${this.element.endDate}">\n                    </div>\n                </div>\n                <div class="task-btns">\n                    <submit class="material-icons task-input-submit-btn">edit</submit>\n                    <i class="material-icons task-input-close-btn">close</i>\n                    \n                </div>\n            </form>\n\n            <div class="task-completion-bar ${this.element.complete?"task-completed":""}">\n            </div>\n\n            \n            `,e.classList.add("task")),this.element.hasOwnProperty("className")&&"Project"===this.element.className&&(this.parentDiv=document.getElementById("projects"),e.innerHTML=`<i class="material-icons project-remove-btn">delete</i><div class="project-name">${this.element.title}</div>`,e.classList.add("project"),this.element.active&&e.classList.add("active-project")),this.element.loaded||(this.parentDiv.appendChild(e),console.log("Created element "+e.id)),e}removeElement(){console.log("removed element: "+this.element.title),document.getElementById(this.element.title).remove()}},t=new class{constructor(){this.currentProjectIndex=0,this.projects=[],this.addProject("Path of Exile",!0),this.addProject("World of Warcraft",!1),this.addDefaultTasks(),this.renderApplication(),this.setActiveProject(0)}renderApplication(){this.renderProjects()}renderProjects(){this.projects.forEach((t=>{new e(t).renderElement(),t.loaded=!0}))}renderTasks(){this.projects[this.currentProjectIndex].tasks.forEach((t=>{new e(t).renderElement()}))}addProject(e,t){const s=new class{constructor(e,t){this.className="Project",this.title=e,this.tasks=[],this.active=t,this.loaded=!1}addTask(e,t,s,n){const a=new class{constructor(e,t,s,n){this.className="Task",this.title=e,this.description=t,this.complete=s,this.endDate=n}updateFields(e,t,s,n){this.title=e,this.description=t,this.complete=s,this.endDate=n}completeTask(){this.complete=!0}}(e,t,s,n);this.tasks.push(a)}removeTask(e){this.tasks.splice(e,1)}getProjectLength(){return this.tasks.length}clearTasks(){this.tasks=[]}}(e,t);this.projects.push(s),this.renderProjects(),1==this.projects.length&&this.setActiveProject(0)}removeProject(e){this.projects.splice(e,1),this.currentProjectIndex=0,this.projects.length<1?this.clearTasks():this.setActiveProject(0)}setActiveProject(e){this.clearTasks(),this.projects[this.currentProjectIndex].active=!1,this.currentProjectIndex=e,this.projects[this.currentProjectIndex].active=!0,this.renderTasks()}completeTask(e){const t=this.projects[this.currentProjectIndex].tasks[e];t.complete=!t.complete}getTask(e){return this.projects[this.currentProjectIndex].tasks[e]}removeTask(e){this.projects[this.currentProjectIndex].tasks.splice(e,1),console.log("Removed a task: ",this.projects[this.currentProjectIndex].tasks)}addTask(e,t,s){this.projects[this.currentProjectIndex].addTask(e,t,!1,s),console.log(this.projects[this.currentProjectIndex])}clearTasks(){document.getElementById("tasks").innerHTML=""}clearProjects(){document.getElementById("projects").innerHTML=""}addDefaultTasks(){this.projects[0].addTask("Get exalted orbs.","Farm heist for more orbs",!1,"2020-10-24"),this.projects[0].addTask("Level golemancer","Get to level 70",!1,"2020-10-24"),this.projects[1].addTask("Get 2.5 helm on warlock.","No idols needed, just go to AQ40.",!1,"2020-10-24"),this.projects[1].addTask("ZG GDKP","Buy idol at all costs",!1,"2020-10-24"),this.projects[1].addTask("Level hunter","For fun yo",!1,"2020-10-24")}};window.addEventListener("load",(function(e){document.querySelector("#tasks-header").innerHTML=document.querySelector(".active-project").innerHTML,document.getElementById("projects").addEventListener("click",(function(e){const s=e.target.parentNode,n=Array.prototype.indexOf.call(this.children,s);e.target.classList.contains("project-name")&&(this.children.length>0&&this.querySelector(".active-project").classList.toggle("active-project"),s.classList.toggle("active-project"),t.setActiveProject(n)),e.target.classList.contains("project-remove-btn")&&this.children.length>1&&(s.classList.contains("active-project")?(s.remove(),this.children.length>0&&this.querySelector(".project").classList.add("active-project")):s.remove(),t.removeProject(n)),document.querySelector("#tasks-header").innerHTML=document.querySelector(".active-project").innerHTML})),document.getElementsByClassName("projects-header")[0].addEventListener("click",(function(e){if("add-project-btn"==e.target.id){const e=document.getElementById("myModal"),s=document.getElementsByClassName("modal-close")[0],n=document.getElementById("project-submit-btn"),a=document.getElementById("project-name-input");e.style.display="block",window.onclick=function(i){i.target!=e&&i.target!=s||(e.style.display="none",a.value=""),i.target==n&&(e.style.display="none",t.addProject(a.value,!1),a.value="")}}("projects-header-title"==e.target.id||e.target.classList.contains("material-icons"))&&(console.log("hiding projects"),document.getElementById("projects").classList.toggle("projects-hidden"))})),document.getElementById("tasks").addEventListener("click",(function(e){const s=e.target.closest(".task"),n=Array.prototype.indexOf.call(this.children,s);function a(e){return s.querySelector(e)}const i=a(".task-content"),c=a(".task-name"),o=a(".task-description"),r=a(".task-end-date"),l=a(".task-btns"),d=a(".task-input-form"),p=a(".task-name-input"),m=a(".task-description-input"),u=a(".task-end-date-input"),h=a(".task-completion-bar");if(e.target.classList.contains("task-complete-btn")&&(h.classList.toggle("task-completed"),t.completeTask(n)),e.target.classList.contains("task-input-close-btn")){d.style.display="none",i.style.display="flex",l.style.display="flex";const e=t.getTask(n);p.value=e.title,m.innerHTML=e.description,u.value=e.endDate}if(e.target.classList.contains("task-edit-btn")&&(d.style.display="block",i.style.display="none",l.style.display="none"),e.target.classList.contains("task-input-submit-btn")){const e=t.getTask(n);e.title=p.value,e.description=m.value,e.endDate=u.value,c.innerHTML=e.title,o.innerHTML=e.description,r.innerHTML=e.endDate,i.style.display="flex",l.style.display="flex",d.style.display="none"}e.target.classList.contains("task-remove-btn")&&(t.removeTask(n),s.remove())})),document.querySelector("#new-task-wrapper").addEventListener("click",(function(e){const s=e.target.closest("#new-task-wrapper");if(e.target.classList.contains("new-task-open-btn")&&(s.querySelector(".form-content").style.display="flex",s.querySelector(".task-btns").style.display="flex",s.querySelector(".new-task-open-btn").style.display="none"),e.target.classList.contains("new-task-close-btn")&&(n(),a()),e.target.classList.contains("new-task-submit-btn")){const e=s.querySelector(".task-name-input").value,i=s.querySelector(".task-description-input").value,c=s.querySelector(".task-end-date-input").value;t.addTask(e,i,c),t.clearTasks(),t.renderTasks(),n(),a()}function n(){s.querySelector(".form-content").style.display="none",s.querySelector(".task-btns").style.display="none",s.querySelector(".new-task-open-btn").style.display="block"}function a(){s.querySelector(".task-name-input").value="",s.querySelector(".task-description-input").value="",s.querySelector(".task-end-date-input").value=""}})),Array.from(document.getElementsByClassName("task-input-form")).forEach((e=>{e.addEventListener("submit",(function(e){e.preventDefault()}))}))}))})();